플럭스는 리액트의 뼈대이다.
클라이언트 측면의 웹 페이지를 만드는데 최적화 된 개념 이라고 한다. -> 사용해보지 않아서 잘 모르겠다.

-> 플러스 개념은 크게 5가지 방향으로 흐른다.

1. 액션이 발동한다. (변수, 메소드, 파라미터 등의 발생)
2. 액션은 디스패처에 정보를 넘겨준다. -> 함수나 클래스 등으로 처리한다.
3. 디스패치된 정보는 스토어에 쌓인다.
4. 뷰에서 필요한 정보를 사용하여 클라이언트와 상호작용 한다.
5. 뷰에서 사용자 등에 의해서 발생된 액션은 다시 디스패처(2번)로 넘어가 3,4,5과정을 반복한다.

MVC와의 차이
- 데이터 바인딩 기반 vs 액션, 이벤트 기반(플러스)
- 양방향성 데이터 전달 vs 통합된 데이터 전달(플럭스)
: 컨트롤러와 뷰 양쪽에서 전체 데이터를 다루고, 리액트는 싱글페이지로 한방향씩 차지한다는 느낌인가? (어차피 jsx조각을 조립하는 것이니.)
- 규모에 따른 복잡성이 존재 및 증가한다면, 플럭스 기반은 그런 부담이 없다. 
- 동기처리와 비동치의 차이도 존재한다.(플럭스가 비동기)
